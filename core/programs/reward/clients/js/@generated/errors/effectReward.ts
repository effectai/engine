/**
 * This code was AUTOGENERATED using the Codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun Codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  isProgramError,
  type Address,
  type SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM,
  type SolanaError,
} from '@solana/kit';
import { EFFECT_REWARD_PROGRAM_ADDRESS } from '../programs';

/** ReflectionInvalid: This account has an invalid reflection. */
export const EFFECT_REWARD_ERROR__REFLECTION_INVALID = 0x1770; // 6000
/** InvalidVault: This account has an invalid vault. */
export const EFFECT_REWARD_ERROR__INVALID_VAULT = 0x1771; // 6001
/** Unauthorized: This account is not authorized to perform this action. */
export const EFFECT_REWARD_ERROR__UNAUTHORIZED = 0x1772; // 6002
/** AlreadyUnstaked: This stake is already unstaked. */
export const EFFECT_REWARD_ERROR__ALREADY_UNSTAKED = 0x1773; // 6003
/** Decreased: This stake is not allowed to decrease. */
export const EFFECT_REWARD_ERROR__DECREASED = 0x1774; // 6004
/** NoClaimableRewards: No Claimable Rewards */
export const EFFECT_REWARD_ERROR__NO_CLAIMABLE_REWARDS = 0x1775; // 6005
/** InvalidMint: Invalid Mint */
export const EFFECT_REWARD_ERROR__INVALID_MINT = 0x1776; // 6006

export type EffectRewardError =
  | typeof EFFECT_REWARD_ERROR__ALREADY_UNSTAKED
  | typeof EFFECT_REWARD_ERROR__DECREASED
  | typeof EFFECT_REWARD_ERROR__INVALID_MINT
  | typeof EFFECT_REWARD_ERROR__INVALID_VAULT
  | typeof EFFECT_REWARD_ERROR__NO_CLAIMABLE_REWARDS
  | typeof EFFECT_REWARD_ERROR__REFLECTION_INVALID
  | typeof EFFECT_REWARD_ERROR__UNAUTHORIZED;

let effectRewardErrorMessages: Record<EffectRewardError, string> | undefined;
if (process.env.NODE_ENV !== 'production') {
  effectRewardErrorMessages = {
    [EFFECT_REWARD_ERROR__ALREADY_UNSTAKED]: `This stake is already unstaked.`,
    [EFFECT_REWARD_ERROR__DECREASED]: `This stake is not allowed to decrease.`,
    [EFFECT_REWARD_ERROR__INVALID_MINT]: `Invalid Mint`,
    [EFFECT_REWARD_ERROR__INVALID_VAULT]: `This account has an invalid vault.`,
    [EFFECT_REWARD_ERROR__NO_CLAIMABLE_REWARDS]: `No Claimable Rewards`,
    [EFFECT_REWARD_ERROR__REFLECTION_INVALID]: `This account has an invalid reflection.`,
    [EFFECT_REWARD_ERROR__UNAUTHORIZED]: `This account is not authorized to perform this action.`,
  };
}

export function getEffectRewardErrorMessage(code: EffectRewardError): string {
  if (process.env.NODE_ENV !== 'production') {
    return (effectRewardErrorMessages as Record<EffectRewardError, string>)[
      code
    ];
  }

  return 'Error message not available in production bundles.';
}

export function isEffectRewardError<
  TProgramErrorCode extends EffectRewardError,
>(
  error: unknown,
  transactionMessage: {
    instructions: Record<number, { programAddress: Address }>;
  },
  code?: TProgramErrorCode
): error is SolanaError<typeof SOLANA_ERROR__INSTRUCTION_ERROR__CUSTOM> &
  Readonly<{ context: Readonly<{ code: TProgramErrorCode }> }> {
  return isProgramError<TProgramErrorCode>(
    error,
    transactionMessage,
    EFFECT_REWARD_PROGRAM_ADDRESS,
    code
  );
}
